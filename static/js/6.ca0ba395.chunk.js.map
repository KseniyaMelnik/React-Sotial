{"version":3,"sources":["pages/Chat/ChatPage.tsx"],"names":["TextArea","Input","ws","WebSocket","Chat","Messages","AddMessageForm","useState","messages","setMessages","useEffect","addEventListener","e","newMessages","JSON","parse","data","prevMessages","style","height","overflow","map","m","index","Message","message","width","src","photo","userName","rows","maxLength","placeholder","ChatPage"],"mappings":"2KAIQA,EAAaC,IAAbD,SAEFE,EAAK,IAAIC,UAAU,gEAenBC,EAAiB,WAClB,OAAO,gCACH,cAACC,EAAD,IACA,cAACC,EAAD,QAIHD,EAAqB,WAAO,IAAD,EACGE,mBAA4B,IAD/B,mBACtBC,EADsB,KACZC,EADY,KAS7B,OAPAC,qBAAU,WACNR,EAAGS,iBAAiB,WAAW,SAACC,GAC5B,IAAIC,EAAcC,KAAKC,MAAMH,EAAEI,MAC/BP,GAAY,SAACQ,GAAD,4BAAqBA,GAArB,YAAsCJ,YAExD,IAEK,qBAAKK,MAAO,CAACC,OAAQ,QAASC,SAAU,QAAxC,SACFZ,EAASa,KAAI,SAACC,EAAoBC,GAArB,OAA8B,cAACC,EAAD,CAAqBC,QAASH,GAAhBC,SAG5DC,EAAgD,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACnD,OAAO,gCACH,cAAC,IAAD,CAAQC,MAAO,GAAIC,IAAKF,EAAQG,QAD7B,IACuC,4BAAIH,EAAQI,WACtD,uBACCJ,EAAQA,QACT,2BAIHnB,EAA2B,WAC7B,OAAO,gCACP,cAACN,EAAD,CAAU8B,KAAM,EACNC,UAAW,EACXC,YAAY,uBAElB,cAAC,IAAD,uBAGOC,UA5Ca,WACxB,OAAO,8BACH,cAAC7B,EAAD","file":"static/js/6.ca0ba395.chunk.js","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport {Button, Image} from \"antd\";\r\nimport { Input } from 'antd';\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst ws = new WebSocket(\"wss://social-network.samuraijs.com/handlers/ChatHandler.ashx\")\r\n\r\nexport type ChatMessageType = {\r\n    message: string\r\n    photo: string\r\n    userId: number\r\n    userName: string\r\n\r\n}\r\n const ChatPage: React.FC = () => {\r\n    return <div>\r\n        <Chat />\r\n    </div>\r\n}\r\n\r\nconst Chat: React.FC = () => {\r\n     return <div>\r\n         <Messages />\r\n         <AddMessageForm />\r\n     </div>\r\n}\r\n\r\nconst Messages: React.FC = () => {\r\n    const [messages, setMessages] = useState<ChatMessageType[]>([])\r\n    useEffect(()=>{\r\n        ws.addEventListener('message', (e)=> {\r\n            let newMessages = JSON.parse(e.data)\r\n            setMessages((prevMessages)=> [...prevMessages, ...newMessages])\r\n        })\r\n    },[])\r\n\r\n    return <div style={{height: '400px', overflow: 'auto'}}>\r\n        {messages.map((m: ChatMessageType, index)=> <Message key={index} message={m}/>)}\r\n    </div>\r\n}\r\nconst Message: React.FC<{message: ChatMessageType}> = ({message}) => {\r\n     return <div>\r\n         <Image  width={30} src={message.photo} /> <b>{message.userName}</b>\r\n         <br/>\r\n         {message.message}\r\n         <hr />\r\n     </div>\r\n}\r\n\r\nconst AddMessageForm: React.FC = () => {\r\n    return <div>\r\n    <TextArea rows={4}\r\n              maxLength={4}\r\n              placeholder=\"enter your message\"\r\n    />\r\n        <Button>Send</Button>\r\n    </div>\r\n}\r\nexport default ChatPage"],"sourceRoot":""}